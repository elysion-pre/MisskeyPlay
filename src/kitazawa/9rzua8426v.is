/// @ 0.19.0
// 気まぐれカスタム絵文字
// Copyright (c) 2024 @elysion
// This script is licensed under the MIT
// https://opensource.org/licenses/mit-license.php

let PLAY_NAME = "気まぐれカスタム絵文字"
let TAG_NAME = "#RANDOM_EMOJI"
let PLAY_URL = eval {
  if exists THIS_URL THIS_URL
  else {
    match SERVER_URL {
      "https://submarin.online" => { `{SERVER_URL}/play/9scukcuqsm` }
      "https://msk.kitazawa.me" => { `{SERVER_URL}/play/9rzua8426v` }
      "https://misskey.stream" => { `{SERVER_URL}/play/9uipd6yld12305wz` }
      * => ""
    }
  }
}

let random = eval {
  var id = if exists USER_ID USER_ID else Util:uuid()
  // シードが「ユーザーID+今日の日付」である乱数生成器を用意
//  Math:gen_rng(`{id}-{Date:year()}-{Date:month()}-{Date:day()}`)
  // シードが「ユーザーID+ミリ秒」である乱数生成器を用意
  Math:gen_rng(`{id}-{Date:year()}-{Date:month()}-{Date:day()}-{Date:minute()}-{Date:second()}-{Date:millisecond()}`)
}

let CHAR_HIRAGANA = [
"あ", "い", "う", "え", "お"
"か", "き", "く", "け", "こ"
"さ", "し", "す", "せ", "そ"
"た", "ち", "つ", "て", "と"
"な", "に", "ぬ", "ね", "の"
"は", "ひ", "ふ", "へ", "ほ"
"ま", "み", "む", "め", "も"
"や", "ゐ", "ゆ", "ゑ", "よ"
"ら", "り", "る", "れ", "ろ"
"わ", "を", "ん"
"が", "ぎ", "ぐ", "げ", "ご"
"ざ", "じ", "ず", "ぜ", "ぞ"
"だ", "ぢ", "づ", "で", "ど"
"ば", "び", "ぶ", "べ", "ぼ"
"ぱ", "ぴ", "ぷ", "ぺ", "ぽ"
"ぁ", "ぃ", "ぅ", "ぇ", "ぉ"
"ゃ", "ゅ", "ょ"
"きゃ", "きゅ", "きょ"
"しゃ", "しゅ", "しょ"
"ちゃ", "ちゅ", "ちょ"
"にゃ", "にゅ", "にょ"
"ひゃ", "ひゅ", "ひょ"
"みゃ", "みゅ", "みょ"
"りゃ", "りゅ", "りょ"
"ぎゃ", "ぎゅ", "ぎょ"
"じゃ", "じゅ", "じょ"
"ぢゃ", "ぢゅ", "ぢょ"
"びゃ", "びゅ", "びょ"
"ぴゃ", "ぴゅ", "ぴょ"
]

let CHAR_KATAKANA = [
"ア", "イ", "ウ", "エ", "オ"
"カ", "キ", "ク", "ケ", "コ"
"サ", "シ", "ス", "セ", "ソ"
"タ", "チ", "ツ", "テ", "ト"
"ナ", "ニ", "ヌ", "ネ", "ノ"
"ハ", "ヒ", "フ", "ヘ", "ホ"
"マ", "ミ", "ム", "メ", "モ"
"ヤ", "ユ", "ヨ"
"ラ", "リ", "ル", "レ", "ロ"
"ワ", "ヲ", "ン"
"ガ", "ギ", "グ", "ゲ", "ゴ"
"ザ", "ジ", "ズ", "ゼ", "ゾ"
"ダ", "ヂ", "ヅ", "デ", "ド"
"バ", "ビ", "ブ", "ベ", "ボ"
"パ", "ピ", "プ", "ペ", "ポ"
"ァ", "ィ", "ゥ", "ェ", "ォ"
"ャ", "ュ", "ョ"
"キャ", "キュ", "キョ"
"シャ", "シュ", "ショ"
"チャ", "チュ", "チョ"
"ニャ", "ニュ", "ニョ"
"ヒャ", "ヒュ", "ヒョ"
"ミャ", "ミュ", "ミョ"
"リャ", "リュ", "リョ"
"ギャ", "ギュ", "ギョ"
"ジャ", "ジュ", "ジョ"
"ヂャ", "ヂュ", "ヂョ"
"ビャ", "ビュ", "ビョ"
"ピャ", "ピュ", "ピョ"
]

@Game() {
  var emoji = []

  // 初期化
  @init() {
    setKana("hiragana")
  }
  // 初期化
  @setKana(type) {
    emoji = []
    for 2 {
      match type {
        "hiragana" => { emoji.push(CHAR_HIRAGANA[random(0, (CHAR_HIRAGANA.len - 1))]) }
        "katakana" => { emoji.push(CHAR_KATAKANA[random(0, (CHAR_KATAKANA.len - 1))]) }
      }
    }
    // 3%の確率で長音符
    let random_prolonged = random(0, 100)
    match true {
      (random_prolonged > 97) => {
        emoji.pop()
        emoji.push("ー")
      }
    }
    main()
  }
  // メイン処理
  @main() {
    let emojis = [
      emoji.join()
      emoji.join()
    ].join(Str:lf)

    // テキストの色
    let fg_col = eval {
      var hex = Num:to_hex(random(0, 16777216))
      let c = (6 - hex.len - 1)
      if (c != 0) for c hex = `0{hex}`
      hex
    }
    // 投稿用テキスト
    let resultMfm = [
      `$[tada.speed=0s $[jelly $[fg.color={fg_col} **{emojis}**]]]`
    ].join(Str:lf)

    // 絵文字ジェネレーター用URL
    let emj_url = [
      `https://emoji-gen.ninja/result?` 
      `text={Uri:encode_component(emojis)}&`
      `color={fg_col}FF&`
      `back_color=00000000&`
      `font=rounded-x-mplus-1p-black&`
      `size_fixed=false&`
      `align=center&`
      `stretch=true&`
      `public_flag=false&`
      `locale=ja`
    ].join()
  
    // 投稿用テキスト
    let postText = [
      `<center>`
      resultMfm
      TAG_NAME
      PLAY_URL
      `</center>`
    ].join(Str:lf)

    render([
      Ui:C:container({
        children: [
          Ui:C:mfm({
            text: resultMfm
          })
        ]
        align: "center"
      })
      Ui:C:container({
        children: [
          Ui:C:button({
            text: "再作成（かな）"
            onClick: @() {
              setKana("hiragana")
            }
          })
          Ui:C:button({
            text: "再作成（カナ）"
            onClick: @() {
              setKana("katakana")
            }
          })
          Ui:C:postFormButton({
            text: "投稿する"
            form: {
              text: postText
            }
            primary: true
            rounded: true
          })
        ]
        align: "center"
      })
      Ui:C:container({
        children: [
          Ui:C:mfm({
            text: `[絵文字ジェネレーターで絵文字を作成（別サイト）]({emj_url})`
          })
        ]
        align: "center"
      })
    ])
  }
  @render(components) {
    Ui:render(components)
  }
  init()
}
Game()
